package translate.cn.com.webxml;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * <a href="http://www.webxml.com.cn/" target="_blank">WebXml.com.cn</a> <strong>中文&lt;-&gt;英文双向翻译WEB服务，永久免费</strong>。提供词典翻译、音标（拼音）、解释、相关词条、例句、读音（英文Only）、候选词等功能。</br>传递中文参数请使用UTF-8编码，使用本站WEB服务请注明或链接本站：http://www.webxml.com.cn/ 感谢大家的支持！<br /><br /><img alt="Ject.cn" title="www.Ject.cn" src="http://www.ject.cn/images/ject_logo_1616.gif" style="vertical-align: middle;" /> <a href="http://www.ject.cn/" target="_blank">中英文双向翻译网站 <img alt="Zip" title="Zip file" src="http://www.ject.cn/images/icon/zip.gif" style="vertical-align: middle;" /> .Net实例下载</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img alt="PDF" title="PDF file" src="http://www.ject.cn/images/icon/pdf.gif" style="vertical-align: middle;" /> <a href="http://fy.webxml.com.cn/files/TranslatorWebServiceHelp.pdf" target="_blank">接口开发帮助文档</a><br /><br />&nbsp;
 *
 * This class was generated by Apache CXF 3.0.3
 * 2015-01-20T11:07:01.797+08:00
 * Generated source version: 3.0.3
 * 
 */
@WebServiceClient(name = "EnglishChinese", 
                  wsdlLocation = "translate.wsdl",
                  targetNamespace = "http://WebXml.com.cn/") 
public class EnglishChinese extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://WebXml.com.cn/", "EnglishChinese");
    public final static QName EnglishChineseHttpPost = new QName("http://WebXml.com.cn/", "EnglishChineseHttpPost");
    public final static QName EnglishChineseSoap12 = new QName("http://WebXml.com.cn/", "EnglishChineseSoap12");
    public final static QName EnglishChineseSoap = new QName("http://WebXml.com.cn/", "EnglishChineseSoap");
    public final static QName EnglishChineseHttpGet = new QName("http://WebXml.com.cn/", "EnglishChineseHttpGet");
    static {
        URL url = EnglishChinese.class.getResource("translate.wsdl");
        if (url == null) {
            url = EnglishChinese.class.getClassLoader().getResource("translate.wsdl");
        } 
        if (url == null) {
            java.util.logging.Logger.getLogger(EnglishChinese.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "translate.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public EnglishChinese(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public EnglishChinese(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public EnglishChinese() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns EnglishChineseHttpPost
     */
    @WebEndpoint(name = "EnglishChineseHttpPost")
    public EnglishChineseHttpPost getEnglishChineseHttpPost() {
        return super.getPort(EnglishChineseHttpPost, EnglishChineseHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EnglishChineseHttpPost
     */
    @WebEndpoint(name = "EnglishChineseHttpPost")
    public EnglishChineseHttpPost getEnglishChineseHttpPost(WebServiceFeature... features) {
        return super.getPort(EnglishChineseHttpPost, EnglishChineseHttpPost.class, features);
    }
    /**
     *
     * @return
     *     returns EnglishChineseSoap
     */
    @WebEndpoint(name = "EnglishChineseSoap12")
    public EnglishChineseSoap getEnglishChineseSoap12() {
        return super.getPort(EnglishChineseSoap12, EnglishChineseSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EnglishChineseSoap
     */
    @WebEndpoint(name = "EnglishChineseSoap12")
    public EnglishChineseSoap getEnglishChineseSoap12(WebServiceFeature... features) {
        return super.getPort(EnglishChineseSoap12, EnglishChineseSoap.class, features);
    }
    /**
     *
     * @return
     *     returns EnglishChineseSoap
     */
    @WebEndpoint(name = "EnglishChineseSoap")
    public EnglishChineseSoap getEnglishChineseSoap() {
        return super.getPort(EnglishChineseSoap, EnglishChineseSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EnglishChineseSoap
     */
    @WebEndpoint(name = "EnglishChineseSoap")
    public EnglishChineseSoap getEnglishChineseSoap(WebServiceFeature... features) {
        return super.getPort(EnglishChineseSoap, EnglishChineseSoap.class, features);
    }
    /**
     *
     * @return
     *     returns EnglishChineseHttpGet
     */
    @WebEndpoint(name = "EnglishChineseHttpGet")
    public EnglishChineseHttpGet getEnglishChineseHttpGet() {
        return super.getPort(EnglishChineseHttpGet, EnglishChineseHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EnglishChineseHttpGet
     */
    @WebEndpoint(name = "EnglishChineseHttpGet")
    public EnglishChineseHttpGet getEnglishChineseHttpGet(WebServiceFeature... features) {
        return super.getPort(EnglishChineseHttpGet, EnglishChineseHttpGet.class, features);
    }

}
